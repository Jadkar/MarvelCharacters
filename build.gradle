// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = "1.3.72"
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.1.2"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

ext {
    minSdkVersion = 16
    targetSdkVersion = 30
    compileSdkVersion = 30
    buildToolVersion = '30.0.2'

    //dependencies
    constraintLayoutVersion = '2.0.4'
    navigationFragment = '2.3.3'
    kotlinktxVer = '1.3.2'
    glideVersion = '4.4.0'
    multidexVersion = '1.0.3'
    rxJavaVersion = '2.2.19'
    rxAndroidVersion = '2.1.0'
    okhttp3Version = '4.9.0'
    retrofitVersion = '2.9.0'
    daggerVersion = '2.17'
    lifecycleVersion = '2.2.0'
    reactivestreamsVersion = '1.1.1'
    appcompatVer = '1.2.0'

    // test dependencies
    testRunnerVersion = '1.0.1'
    junit_jupiter_version= '5.3.2'
    espressoVersion = '3.0.1'
    uiautomatorVersion = '2.1.2'
    junitVersion = '4.12'
    junitParamsVersion = '1.1.1'
    hamcrestVersion = '2.2'
    mockitoVersion = '3.5.13'
    mockitoKotlinVersion = '1.10.0'


    kotlinktx="androidx.core:core-ktx:$kotlinktxVer"
    kotlinstdlib ="org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    lifeCycle= "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    constraintlayout="androidx.constraintlayout:constraintlayout:$rootProject.ext.constraintLayoutVersion"
    appcompat= "androidx.appcompat:appcompat:$appcompatVer"
    navfragmentktx="androidx.navigation:navigation-fragment-ktx:$rootProject.ext.navigationFragment"
    navuiktx="androidx.navigation:navigation-ui-ktx:$rootProject.ext.navigationFragment"
    reactivestreams= "android.arch.lifecycle:reactivestreams:$reactivestreamsVersion"
    retrofit = "com.squareup.retrofit2:retrofit:$retrofitVersion"
    retrofitGsonConverter = "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    retrofitRxJava2Adapter = "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    okhttpLogging = "com.squareup.okhttp3:logging-interceptor:$okhttp3Version"

    rxJava = "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    rxAndroid = "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    javaxInject = "javax.inject:javax.inject:1"
    hamcrest = "org.hamcrest:hamcrest:$hamcrestVersion"


    // dagger
    dagger                  = "com.google.dagger:dagger:$daggerVersion"
    daggerAndroid           = "com.google.dagger:dagger-android:$daggerVersion"
    daggerSupport           = "com.google.dagger:dagger-android-support:$daggerVersion"
    daggerCompiler          = "com.google.dagger:dagger-compiler:$daggerVersion"
    daggerAndroidCompiler   = "com.google.dagger:dagger-android-processor:$daggerVersion"

    //Glide
    glide="com.github.bumptech.glide:glide:$glideVersion"
    glideCompiler="com.github.bumptech.glide:compiler:$glideVersion"

    // Local Unit Test
    junitjupiterapi="org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version"
    junitjupiterparam="org.junit.jupiter:junit-jupiter-params:$junit_jupiter_version"
    junitjupiterengine="org.junit.jupiter:junit-jupiter-engine:$junit_jupiter_version"
    junit = "junit:junit:$junitVersion"

    // mockito
    mockito="org.mockito:mockito-core:$mockitoVersion"
    mockitoKotlin="io.mockk:mockk:$mockitoKotlinVersion"

}

task clean(type: Delete) {
    delete rootProject.buildDir
}